#backend
apiVersion: v1
kind: Service
metadata:
  name: mocksserver-service
  labels:
    app: mocksserver
spec:
  selector:
    app: mocksserver
  ports:
    - protocol: TCP
      port: 3100
      targetPort: 3100
      name: http-port
    - protocol: TCP
      port: 3110
      targetPort: 3110
      name: second-port
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mocksserver-deployment
  labels:
    app: mocksserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mocksserver
  template:
    metadata:
      labels:
        app: mocksserver
    spec:
      containers:
        - name: mocksserver-container
          image: mocksserver/main
          ports:
            - containerPort: 3100
            - containerPort: 3110
          env:
            - name: MOCKS_PATH
              value: /input
          volumeMounts:
            - name: mocks-volume
              mountPath: /input/mocks
            - name: mocks-config-volume
              mountPath: /input/mocks.config.js
          command: ["npm", "start"]
      volumes:
        - name: mocks-volume
          hostPath:
            path: /mnt/data/mocks
            type: Directory
        - name: mocks-config-volume
          hostPath:
            path: /mnt/data/mocks.config.js
            type: File
---
#bff
apiVersion: v1
kind: Service
metadata:
  name: backend-bff-service
  labels:
    app: backend-bff
spec:
  selector:
    app: backend-bff
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 8080
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-bff-deployment
  labels:
    app: backend-bff
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-bff
  template:
    metadata:
      labels:
        app: backend-bff
    spec:
      containers:
        - name: backend-bff-container
          image: dacho7/istio-challenge:v7
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: prod
            - name: URL_BACKEND
              value: http://mocksserver-service:3100
            - name: PORT
              value: "8080"
            - name: ENV
              value: pdn
---
#frontend
apiVersion: v1
kind: Service
metadata:
  name: goty-front-service
spec:
  selector:
    app: goty-front
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 32000 # Puerto que Kubernetes expone fuera del cluster
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: goty-front-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: goty-front
  template:
    metadata:
      labels:
        app: goty-front
    spec:
      containers:
      - name: goty-front
        image: gporras/goty-front:latest
        ports:
        - containerPort: 80
        env:
        - name: URL
          value: "http://10.96.223.0:5000"
